{"version":3,"sources":["component/Square.js","component/Board.js","component/Game.js","index.js"],"names":["Square","value","onClick","className","Board","squares","renderSquare","i","Game","status","initialState","history","Array","fill","stepNumber","xIsNext","useState","state","setState","calculateWinner","lines","length","a","b","c","current","winner","moves","map","step","move","desc","jumpTo","slice","concat","handleClick","ReactDOM","render","document","getElementById"],"mappings":"8MASeA,EAPA,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QACrB,OACI,wBAAQC,UAAU,SAASD,QAASA,EAApC,SACKD,KC6BEG,EA/BD,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,QAASH,EAAc,EAAdA,QAElBI,EAAe,SAACC,GACpB,OACE,cAAC,EAAD,CACEN,MAAOI,EAAQE,GACfL,QAAS,WAAQA,EAAQK,OAK/B,OACE,gCACE,sBAAKJ,UAAU,YAAf,UACGG,EAAa,GACbA,EAAa,GACbA,EAAa,MAEhB,sBAAKH,UAAU,YAAf,UACGG,EAAa,GACbA,EAAa,GACbA,EAAa,MAEhB,sBAAKH,UAAU,YAAf,UACGG,EAAa,GACbA,EAAa,GACbA,EAAa,UCmEPE,EA7FF,WACX,IA2CIC,EA3CEC,EAAe,CACnBC,QAAS,CAAC,CACRN,QAASO,MAAM,GAAGC,KAAK,QAEzBC,WAAY,EACZC,SAAS,GANM,EASSC,mBAASN,GATlB,mBASVO,EATU,KASHC,EATG,KAUXC,EAAgB,SAACd,GAWrB,IAVA,IAAMe,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAb,EAAI,EAAGA,EAAIa,EAAMC,OAAQd,IAAK,CAAC,IAAD,cACnBa,EAAMb,GADa,GAC9Be,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAInB,EAAQiB,IAAMjB,EAAQiB,KAAOjB,EAAQkB,IAAMlB,EAAQiB,KAAOjB,EAAQmB,GACpE,OAAOnB,EAAQiB,GAGnB,OAAO,MAEHX,EAAUM,EAAMN,QAChBc,EAAUd,EAAQM,EAAMH,YACxBY,EAASP,EAAgB,YAAIM,EAAQpB,UAErCsB,EAAQhB,EAAQiB,KAAI,SAACC,EAAMC,GAC/B,IAAMC,EAAOD,EACX,eAAiBA,EACjB,mBACF,OACE,6BACE,wBAAQ5B,QAAS,kBAAM8B,EAAOF,IAA9B,SAAsCC,KAD/BD,MAQXrB,EADEiB,EACO,aAAeA,EAEf,iBAAmBT,EAAMF,QAAU,IAAM,KAGpD,IAmBMiB,EAAS,SAACH,GACdX,EAAS,2BACJD,GADG,IAENH,WAAYe,EACZd,QAAUc,EAAO,IAAO,MAI5B,OACE,sBAAK1B,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAAC,EAAD,CACEE,QAASoB,EAAQpB,QACjBH,QAAS,SAACK,GAAD,OAhCG,SAACA,GACnB,IAAMI,EAAUM,EAAMN,QAAQsB,MAAM,EAAGhB,EAAMH,WAAa,GACpDW,EAAUd,EAAQA,EAAQU,OAAS,GACnChB,EAAO,YAAOoB,EAAQpB,SACxBc,EAAgBd,IAAYA,EAAQE,KAGxCF,EAAQE,GAAKU,EAAMF,QAAU,IAAM,IACnCG,EACE,CACEP,QAASA,EAAQuB,OAAO,CAAC,CACvB7B,QAASA,KAEXS,WAAYH,EAAQU,OACpBN,SAAUE,EAAMF,WAkBEoB,CAAY5B,QAGhC,sBAAKJ,UAAU,YAAf,UACE,8BAAMM,IACN,6BAAKkB,W,MCtFbS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ce0884a3.chunk.js","sourcesContent":["import React from 'react';\n\nconst Square = ({ value, onClick }) => {\n    return (\n        <button className=\"square\" onClick={onClick}>\n            {value}\n        </button>\n    )\n}\nexport default Square;","import React from 'react';\nimport Square from './Square';\n\nconst Board = ({ squares, onClick }) => {\n\n  const renderSquare = (i) => {\n    return (\n      <Square\n        value={squares[i]}\n        onClick={() => { onClick(i) }}\n      />\n    )\n  }\n\n  return (\n    <div>\n      <div className=\"board-row\">\n        {renderSquare(0)}\n        {renderSquare(1)}\n        {renderSquare(2)}\n      </div>\n      <div className=\"board-row\">\n        {renderSquare(3)}\n        {renderSquare(4)}\n        {renderSquare(5)}\n      </div>\n      <div className=\"board-row\">\n        {renderSquare(6)}\n        {renderSquare(7)}\n        {renderSquare(8)}\n      </div>\n    </div>\n  );\n}\nexport default Board;","import React, { useState } from 'react';\nimport Board from './Board';\n\nconst Game = () => {\n  const initialState = {\n    history: [{\n      squares: Array(9).fill(null),\n    }],\n    stepNumber: 0,\n    xIsNext: true,\n  }\n\n  const [state, setState] = useState(initialState);\n  const calculateWinner=(squares)=> {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n    return null;\n  }\n  const history = state.history;\n  const current = history[state.stepNumber];\n  const winner = calculateWinner([...current.squares]);\n\n  const moves = history.map((step, move) => {\n    const desc = move ?\n      'Go to move #' + move :\n      'Go to game start';\n    return (\n      <li key={move}>\n        <button onClick={() => jumpTo(move)}>{desc}</button>\n      </li>\n    );\n  });\n\n  let status;\n  if (winner) {\n    status = \"Winner is \" + winner;\n  } else {\n    status = 'Next player: ' + (state.xIsNext ? 'X' : 'O');\n  }\n\n  const handleClick = (i) => {\n    const history = state.history.slice(0, state.stepNumber + 1);;\n    const current = history[history.length - 1];\n    const squares = [...current.squares];\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = state.xIsNext ? 'X' : 'O';\n    setState(\n      {\n        history: history.concat([{\n          squares: squares,\n        }]),\n        stepNumber: history.length,\n        xIsNext: !state.xIsNext,\n      }\n    );\n  }\n\n  const jumpTo = (step) => {\n    setState({\n      ...state,\n      stepNumber: step,\n      xIsNext: (step % 2) === 0,\n    });\n  }\n\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board\n          squares={current.squares}\n          onClick={(i) => handleClick(i)}\n        />\n      </div>\n      <div className=\"game-info\">\n        <div>{status}</div>\n        <ol>{moves}</ol>\n      </div>\n    </div>\n  );\n}\nexport default Game;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Game from './component/Game';\nimport './index.css';\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}